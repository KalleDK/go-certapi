on: push

jobs:
  create_release:
    name: Create Relase
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      run: echo "::set-output name=upload_url::https://flaf.dk"
  build_musl:
    name: Build with musl
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
    - name: Build Project
      uses: docker://golang:alpine
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      with:
        args: go build ./cmd/certmgr
    - name: Pack artifacts
      run: |
        tar cvfz certmgr-latest-${{ matrix.goos }}-${{ matrix.goarch }}-musl.tar.gz certmgr
        sha256sum certmgr-latest-${{ matrix.goos }}-${{ matrix.goarch }}-musl.tar.gz | cut -d ' ' -f 1 > certmgr-latest-${{ matrix.goos }}-${{ matrix.goarch }}-musl.tar.gz.sha256
        md5sum certmgr-latest-${{ matrix.goos }}-${{ matrix.goarch }}-musl.tar.gz | cut -d ' ' -f 1 > certmgr-latest-${{ matrix.goos }}-${{ matrix.goarch }}-musl.tar.gz.md5
    - name: Upload Assets
      uses: actions/upload-artifact@v2
      with:
        path: |
          certmgr-latest-${{ matrix.goos }}-${{ matrix.goarch }}-musl.tar.gz
          certmgr-latest-${{ matrix.goos }}-${{ matrix.goarch }}-musl.tar.gz.sha256
          certmgr-latest-${{ matrix.goos }}-${{ matrix.goarch }}-musl.tar.gz.md5
#  build_glibc:
#    name: Build with glibc
#    needs: create_release
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        goos: [linux]
#        goarch: [amd64]
#    steps:
#    - name: Checkout source code
#      uses: actions/checkout@v2
#    - name: Build Project
#      uses: docker://golang:latest
#      env:
#        GOOS: ${{ matrix.goos }}
#        GOARCH: ${{ matrix.goarch }}
#      with:
#        args: go build ./cmd/certmgr
#    - name: List Again
#      run: |
#        echo ${{ needs.create_release.outputs.upload_url }}
